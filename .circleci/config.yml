version: 2.1 # Use 2.1 to enable using orbs and other features.

# Declare the orbs that we'll use in our config.
# read more about orbs: https://circleci.com/docs/2.0/using-orbs/
orbs:
  ruby: circleci/ruby@1.0

executors:
  my-executor:
    docker:
      - image: cimg/ruby:2.7-node
        auth:
          username: duydyy
          password: $DOCKERHUB_PASSWORD  # context / project UI env-var reference
    working_directory: /tmp

jobs:
  build: # our first job, named "build"
    executor: my-executor
    working_directory: ~/oivan
    steps:
      - checkout # pull down our git code.
      - ruby/install-deps # use the ruby orb to install dependencies

  test:  # our next job, called "test"
    # we run "parallel job containers" to enable speeding up our tests;
    # this splits our tests across multiple containers.
    parallelism: 3
    # here we set TWO docker images.
    executor: my-executor
    working_directory: ~/oivan

    # environment variables specific to Ruby/Rails, applied to the primary container.
    environment:
      BUNDLE_JOBS: "3"
      BUNDLE_RETRY: "3"
      RAILS_ENV: test
    # A series of steps to run, some are similar to those in "build".
    steps:
      - checkout
      - ruby/install-deps
      - run: RACK_ENV=test bundle exec rake storage:create
      - run: bundle exec rspec spec
  
  deploy:
    executor: my-executor
    working_directory: ~/oivan
    steps:
      - add_ssh_keys:
          fingerprints:
            - "a7:6e:c6:74:f5:3a:1a:e4:4c:87:2e:96:24:21:a4:cc"
      - run: ssh-keyscan 45.77.244.152 >> ~/.ssh/known_hosts
      - run: sudo apt update
      - run: sudo apt install rsync
      - checkout # pull down our git code.
      - ruby/install-deps # use the ruby orb to install dependencies
      - run:
          name: deploy
          command: |
            if [ "${CIRCLE_BRANCH}" = "main" ]; then
              rsync -e "ssh -o StrictHostKeyChecking=no" -arvc --exclude .git ~/oivan/ root@45.77.244.152:/srv/oivan
            else
              echo "Not master branch, dry run only"
            fi

# We use workflows to orchestrate the jobs that we declared above.
workflows:
  version: 2
  build_and_test:     # The name of our workflow is "build_and_test"
    jobs:             # The list of jobs we run as part of this workflow.
      - build         # Run build first.
      - test:         # Then run test,
          requires:   # Test requires that build passes for it to run.
            - build   # Finally, run the build job.
      - deploy:
          requires:
            - test